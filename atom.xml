<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Nathan Russell]]></title>
  <link href="http://nathan-russell-blog.github.io/atom.xml" rel="self"/>
  <link href="http://nathan-russell-blog.github.io/"/>
  <updated>2015-08-15T12:42:56-04:00</updated>
  <id>http://nathan-russell-blog.github.io/</id>
  <author>
    <name><![CDATA[Nathan Russell]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Code Markdown Test]]></title>
    <link href="http://nathan-russell-blog.github.io/blog/2015/08/09/code-markdown-test/"/>
    <updated>2015-08-09T20:43:51-04:00</updated>
    <id>http://nathan-russell-blog.github.io/blog/2015/08/09/code-markdown-test</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span>Bash Markdown </span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>
</span><span class='line'><span class="nv">SOMEDIRECTORY</span><span class="o">=</span><span class="k">$(</span><span class="nb">echo</span> <span class="nv">$PWD</span> <span class="p">|</span> sed -re <span class="s1">&#39;s/.+(include\/)(.+)/\1/&#39;</span><span class="k">)</span>
</span><span class='line'><span class="nb">echo</span> <span class="nv">$SOMEDIRECTORY</span>
</span><span class='line'>
</span><span class='line'><span class="nb">echo</span> <span class="k">$(</span>date +<span class="s1">&#39;%F %T&#39;</span><span class="k">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>C++ Markdown</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="cp">#include &lt;tuple&gt;</span>
</span><span class='line'><span class="cp">#include &lt;type_traits&gt;</span>
</span><span class='line'><span class="cp">#include &lt;iostream&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">template</span> <span class="o">&lt;</span><span class="k">typename</span><span class="p">...</span> <span class="n">Ts</span><span class="o">&gt;</span>
</span><span class='line'><span class="k">struct</span> <span class="n">whatever</span> <span class="p">{</span>
</span><span class='line'><span class="k">public</span><span class="o">:</span>
</span><span class='line'>  <span class="n">whatever</span><span class="p">(</span><span class="n">Ts</span><span class="p">...</span> <span class="n">ts</span><span class="p">)</span>
</span><span class='line'>  <span class="o">:</span> <span class="n">data</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">forward</span><span class="o">&lt;</span><span class="n">Ts</span><span class="o">&gt;</span><span class="p">(</span><span class="n">ts</span><span class="p">)...)</span>
</span><span class='line'>  <span class="p">{}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">static</span> <span class="k">constexpr</span> <span class="n">std</span><span class="o">::</span><span class="kt">size_t</span> <span class="n">arg_count</span> <span class="o">=</span> <span class="k">sizeof</span><span class="p">...(</span><span class="n">Ts</span><span class="p">);</span>
</span><span class='line'>  <span class="n">std</span><span class="o">::</span><span class="n">tuple</span><span class="o">&lt;</span><span class="n">Ts</span><span class="p">...</span><span class="o">&gt;</span> <span class="n">data</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">template</span> <span class="o">&lt;</span><span class="k">typename</span><span class="p">...</span> <span class="n">Args</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="kr">inline</span> <span class="kt">void</span> <span class="n">print</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">print_data</span><span class="o">&lt;</span><span class="n">Args</span><span class="p">...</span><span class="o">&gt;</span><span class="p">(</span><span class="n">data</span><span class="p">);</span>
</span><span class='line'>    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">private</span><span class="o">:</span>
</span><span class='line'>  <span class="k">template</span> <span class="o">&lt;</span><span class="n">std</span><span class="o">::</span><span class="kt">size_t</span> <span class="n">I</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="k">typename</span><span class="p">...</span> <span class="n">Args</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="kr">inline</span> <span class="k">typename</span> <span class="n">std</span><span class="o">::</span><span class="n">enable_if</span><span class="o">&lt;</span><span class="n">I</span> <span class="o">==</span> <span class="n">arg_count</span><span class="p">,</span> <span class="kt">void</span><span class="o">&gt;::</span><span class="n">type</span>
</span><span class='line'>  <span class="n">print_data</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">tuple</span><span class="o">&lt;</span><span class="n">Args</span><span class="p">...</span><span class="o">&gt;&amp;</span> <span class="n">tpl</span><span class="p">)</span> <span class="p">{}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">template</span> <span class="o">&lt;</span><span class="n">std</span><span class="o">::</span><span class="kt">size_t</span> <span class="n">I</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="k">typename</span><span class="p">...</span> <span class="n">Args</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="kr">inline</span> <span class="k">typename</span> <span class="n">std</span><span class="o">::</span><span class="n">enable_if</span><span class="o">&lt;</span><span class="n">I</span> <span class="o">&lt;</span> <span class="n">arg_count</span><span class="p">,</span> <span class="kt">void</span><span class="o">&gt;::</span><span class="n">type</span>
</span><span class='line'>  <span class="n">print_data</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">tuple</span><span class="o">&lt;</span><span class="n">Args</span><span class="p">...</span><span class="o">&gt;&amp;</span> <span class="n">tpl</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">typedef</span> <span class="k">typename</span> <span class="n">std</span><span class="o">::</span><span class="n">tuple_element</span><span class="o">&lt;</span><span class="n">I</span><span class="p">,</span> <span class="k">decltype</span><span class="p">(</span><span class="n">tpl</span><span class="p">)</span><span class="o">&gt;::</span><span class="n">type</span> <span class="n">type</span><span class="p">;</span>
</span><span class='line'>    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span>
</span><span class='line'>      <span class="n">std</span><span class="o">::</span><span class="n">get</span><span class="o">&lt;</span><span class="n">I</span><span class="o">&gt;</span><span class="p">(</span><span class="n">tpl</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;</span><span class="se">\t</span><span class="s">&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="n">print_data</span><span class="o">&lt;</span><span class="n">I</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">Args</span><span class="p">...</span><span class="o">&gt;</span><span class="p">(</span><span class="n">tpl</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>R Markdown</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>foo <span class="o">&lt;-</span> <span class="kr">function</span><span class="p">(</span>x<span class="p">,</span> y<span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  x <span class="o">**</span> y
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span>data.table<span class="o">::</span>data.table<span class="p">(</span>
</span><span class='line'>  x <span class="o">=</span> rnorm<span class="p">(</span><span class="m">20</span><span class="p">),</span>
</span><span class='line'>  y <span class="o">=</span> rpois<span class="p">(</span><span class="m">20</span><span class="p">,</span> <span class="m">3</span><span class="p">))[,</span>
</span><span class='line'>  z <span class="o">:=</span> foo<span class="p">(</span>x<span class="p">,</span> y<span class="p">)])</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>SQL Markdown</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span> <span class="n">TOP</span> <span class="mi">1</span> <span class="n">w</span><span class="p">.</span><span class="o">*</span>
</span><span class='line'>  <span class="p">,</span><span class="n">x</span><span class="p">.[</span><span class="n">foo</span><span class="p">]</span>
</span><span class='line'>  <span class="p">,</span><span class="n">x</span><span class="p">.[</span><span class="n">bar</span><span class="p">]</span>
</span><span class='line'>  <span class="p">,</span><span class="k">ISNULL</span><span class="p">(</span><span class="n">x</span><span class="p">.[</span><span class="n">baz</span><span class="p">],</span> <span class="mi">0</span><span class="p">.)</span> <span class="k">AS</span> <span class="p">[</span><span class="n">baz</span><span class="p">]</span>
</span><span class='line'><span class="k">FROM</span> <span class="p">[</span><span class="n">Whatever</span><span class="p">]</span> <span class="n">w</span>
</span><span class='line'>  <span class="k">OUTER</span> <span class="n">APPLY</span> <span class="p">(</span>
</span><span class='line'>    <span class="k">SELECT</span> <span class="n">TOP</span> <span class="mi">1</span> <span class="p">[</span><span class="n">foo</span><span class="p">]</span>
</span><span class='line'>      <span class="p">,[</span><span class="n">bar</span><span class="p">]</span>
</span><span class='line'>      <span class="p">,[</span><span class="n">baz</span><span class="p">]</span>
</span><span class='line'>    <span class="k">FROM</span> <span class="p">[</span><span class="n">Something</span> <span class="k">Else</span><span class="p">]</span>
</span><span class='line'>    <span class="k">WHERE</span> <span class="p">[</span><span class="k">Timestamp</span><span class="p">]</span> <span class="k">BETWEEN</span> <span class="n">GETDATE</span><span class="p">()</span><span class="o">-</span><span class="mi">5</span> <span class="k">AND</span> <span class="n">GETDATE</span><span class="p">()</span><span class="o">-</span><span class="mi">1</span>
</span><span class='line'>    <span class="k">ORDER</span> <span class="k">BY</span> <span class="p">[</span><span class="n">Value</span> <span class="n">Field</span><span class="p">]</span> <span class="k">DESC</span>
</span><span class='line'>  <span class="p">)</span> <span class="n">x</span>
</span><span class='line'><span class="k">ORDER</span> <span class="k">BY</span> <span class="p">[</span><span class="n">Something</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
</feed>
